{"version":3,"sources":["../dist-esnext/Position.test.js"],"names":["assert","describe","it","position1","x","y","position2","equal","hasSamePosition","position","isBlack","ok","hasBlackPiece","notOk","undefined","hasNoPiece","hasWhitePiece","hasPiece"],"mappings":"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","file":"Position.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport { Position } from './index';\ndescribe('Position', () => {\n    describe('hasSamePosition', () => {\n        it('true', () => {\n            const position1 = { x: 2, y: 3 };\n            const position2 = { x: 2, y: 3 };\n            assert.equal(Position.hasSamePosition(position1, position2), true);\n        });\n        it('false', () => {\n            const position1 = { x: 3, y: 2 };\n            const position2 = { x: 2, y: 3 };\n            assert.equal(Position.hasSamePosition(position1, position2), false);\n        });\n    });\n    describe('hasBlackPiece', () => {\n        it('return true for black piece', () => {\n            const position = { x: 2, y: 3, isBlack: true };\n            assert.ok(Position.hasBlackPiece(position));\n        });\n        it('return false for white piece', () => {\n            const position = { x: 2, y: 3, isBlack: false };\n            assert.notOk(Position.hasBlackPiece(position));\n        });\n        describe('return false for no piece', () => {\n            it('null', () => {\n                const position = { x: 2, y: 3, isBlack: null };\n                assert.notOk(Position.hasBlackPiece(position));\n            });\n            it('undefined', () => {\n                const position = { x: 2, y: 3, isBlack: undefined };\n                assert.notOk(Position.hasBlackPiece(position));\n            });\n            it('no prop', () => {\n                const position = { x: 2, y: 3 };\n                delete position.isBlack;\n                assert.notOk(Position.hasBlackPiece(position));\n            });\n        });\n    });\n    describe('hasNoPiece', () => {\n        it('return false for black piece', () => {\n            const position = { x: 2, y: 3, isBlack: true };\n            assert.notOk(Position.hasNoPiece(position));\n        });\n        it('return false for white piece', () => {\n            const position = { x: 2, y: 3, isBlack: false };\n            assert.notOk(Position.hasNoPiece(position));\n        });\n        describe('return true for no piece', () => {\n            it('null', () => {\n                const position = { x: 2, y: 3, isBlack: null };\n                assert.ok(Position.hasNoPiece(position));\n            });\n            it('undefined', () => {\n                const position = { x: 2, y: 3, isBlack: undefined };\n                assert.ok(Position.hasNoPiece(position));\n            });\n            it('no prop', () => {\n                const position = { x: 2, y: 3 };\n                delete position.isBlack;\n                assert.ok(Position.hasNoPiece(position));\n            });\n        });\n    });\n    describe('hasWhitePiece', () => {\n        it('return false for black piece', () => {\n            const position = { x: 2, y: 3, isBlack: true };\n            assert.notOk(Position.hasWhitePiece(position));\n        });\n        it('return true for white piece', () => {\n            const position = { x: 2, y: 3, isBlack: false };\n            assert.ok(Position.hasWhitePiece(position));\n        });\n        describe('return false for no piece', () => {\n            it('null', () => {\n                const position = { x: 2, y: 3, isBlack: null };\n                assert.notOk(Position.hasWhitePiece(position));\n            });\n            it('undefined', () => {\n                const position = { x: 2, y: 3, isBlack: undefined };\n                assert.notOk(Position.hasWhitePiece(position));\n            });\n            it('no prop', () => {\n                const position = { x: 2, y: 3 };\n                delete position.isBlack;\n                assert.notOk(Position.hasWhitePiece(position));\n            });\n        });\n    });\n    describe('hasPiece', () => {\n        it('return true for black piece', () => {\n            const position = { x: 2, y: 3, isBlack: true };\n            assert.ok(Position.hasPiece(position));\n        });\n        it('return true for white piece', () => {\n            const position = { x: 2, y: 3, isBlack: false };\n            assert.ok(Position.hasPiece(position));\n        });\n        describe('return false for no piece', () => {\n            it('null', () => {\n                const position = { x: 2, y: 3, isBlack: null };\n                assert.notOk(Position.hasPiece(position));\n            });\n            it('undefined', () => {\n                const position = { x: 2, y: 3, isBlack: undefined };\n                assert.notOk(Position.hasPiece(position));\n            });\n            it('no prop', () => {\n                const position = { x: 2, y: 3 };\n                delete position.isBlack;\n                assert.notOk(Position.hasPiece(position));\n            });\n        });\n    });\n});\n//# sourceMappingURL=Position.test.js.map"]}