{"version":3,"sources":["../dist-esnext/Piece.test.js"],"names":["describe","it"],"mappings":";;AAAA;AACAA,SAAS,OAAT,EAAkB,YAAM;AACpBA,aAAS,aAAT,EAAwB,YAAM;AAC1BC,WAAG,cAAH;AACH,KAFD;AAGAD,aAAS,gBAAT,EAA2B,YAAM;AAC7BC,WAAG,cAAH;AACH,KAFD;AAGAD,aAAS,kBAAT,EAA6B,YAAM;AAC/BC,WAAG,cAAH;AACH,KAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAnED;AAoEA","file":"Piece.test.js","sourcesContent":["// import { createPiece, getOtherPieces, getPiecesOrdered } from './index';\ndescribe('Piece', () => {\n    describe('createPiece', () => {\n        it('do something');\n    });\n    describe('getOtherPieces', () => {\n        it('do something');\n    });\n    describe('getPiecesOrdered', () => {\n        it('do something');\n    });\n    // describe('getStartPieces', () => {\n    //     describe('3x3', () => {\n    //         const boardConf = getBoardConf({ x: 3, y: 3 });\n    //         it('return black pieces at start positions', () => {\n    //             const isBlack = true;\n    //             const actualPieces = getStartPieces(boardConf, isBlack);\n    //             const expectedPieces = [\n    //                 createPiece(0, 0, isBlack),\n    //                 createPiece(1, 0, isBlack),\n    //                 createPiece(2, 0, isBlack)\n    //             ];\n    //             deepEqual(actualPieces, expectedPieces);\n    //         });\n    //         it('return white pieces at start positions', () => {\n    //             const isBlack = false;\n    //             const actualPieces = getStartPieces(boardConf, isBlack);\n    //             const expectedPieces = [\n    //                 createPiece(0, 0, isBlack),\n    //                 createPiece(1, 0, isBlack),\n    //                 createPiece(2, 0, isBlack)\n    //             ];\n    //             deepEqual(actualPieces, expectedPieces);\n    //         });\n    //     });\n    //     describe('8x8', () => {\n    //         it('return black pieces at start positions', () => {\n    //             const isBlack = true;\n    //             const actualPieces = getStartPieces(defaultBoardConf, isBlack);\n    //             const expectedPieces = [\n    //                 createPiece(0, 0, isBlack),\n    //                 createPiece(1, 0, isBlack),\n    //                 createPiece(2, 0, isBlack),\n    //                 createPiece(3, 0, isBlack),\n    //                 createPiece(4, 0, isBlack),\n    //                 createPiece(5, 0, isBlack),\n    //                 createPiece(6, 0, isBlack),\n    //                 createPiece(7, 0, isBlack)\n    //             ];\n    //             deepEqual(actualPieces, expectedPieces);\n    //         });\n    //         it('return white pieces at start positions', () => {\n    //             const isBlack = false;\n    //             const actualPieces = getStartPieces(defaultBoardConf, isBlack);\n    //             const expectedPieces = [\n    //                 createPiece(0, 0, isBlack),\n    //                 createPiece(1, 0, isBlack),\n    //                 createPiece(2, 0, isBlack),\n    //                 createPiece(3, 0, isBlack),\n    //                 createPiece(4, 0, isBlack),\n    //                 createPiece(5, 0, isBlack),\n    //                 createPiece(6, 0, isBlack),\n    //                 createPiece(7, 0, isBlack)\n    //             ];\n    //             deepEqual(actualPieces, expectedPieces);\n    //         });\n    //     });\n    // });\n});\n//# sourceMappingURL=Piece.test.js.map"]}