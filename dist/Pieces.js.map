{"version":3,"sources":["../dist-esnext/Pieces.js"],"names":["Board","Piece","removePiece","pieces","pieceToRemove","filter","hasSamePosition","piece","createPieces","isBlack","positions","map","position","createPiece","createPiecesCurried","curry","createBlackPieces","createWhitePieces","getPiecesOrdered","ordered","forEach","y","getY0Start7End","push","haveSamePieceAndPosition","a","b","i","length","hasSamePieceAndPosition"],"mappings":";;;;;;;AAAA;;;;AACA;;IAAYA,K;;AACZ;;IAAYC,K;;;;;;AACZ;AACA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,aAA7B,EAA4C;AACxC,WAAOD,OAAOE,MAAP,CAAc;AAAA,eAAS,CAACJ,MAAMK,eAAN,CAAsBC,KAAtB,EAA6BH,aAA7B,CAAV;AAAA,KAAd,CAAP;AACH;AACD,SAASI,YAAT,CAAsBC,OAAtB,EAA+BC,SAA/B,EAA0C;AACtC,WAAOA,UAAUC,GAAV,CAAc,oBAAY;AAC7BC,iBAASH,OAAT,GAAmBA,OAAnB;AACA,eAAOR,MAAMY,WAAN,CAAkBD,QAAlB,CAAP;AACH,KAHM,CAAP;AAIH;AACD,IAAME,sBAAsB,gBAAEC,KAAF,CAAQP,YAAR,CAA5B;AACA,IAAMQ,oBAAoBF,oBAAoB,IAApB,CAA1B;AACA,IAAMG,oBAAoBH,oBAAoB,KAApB,CAA1B;AACA,SAASI,gBAAT,CAA0Bf,MAA1B,EAAkCM,OAAlC,EAA2C;AACvC,QAAMU,UAAU,EAAhB;AACAhB,WAAOiB,OAAP,CAAe,iBAAS;AACpB,YAAMC,IAAIrB,MAAMsB,cAAN,CAAqBf,MAAMK,QAAN,CAAeS,CAApC,EAAuCZ,OAAvC,CAAV;AACA,YAAI,CAACU,QAAQE,CAAR,CAAL,EACIF,QAAQE,CAAR,IAAa,CAACd,KAAD,CAAb,CADJ,KAGIY,QAAQE,CAAR,EAAWE,IAAX,CAAgBhB,KAAhB;AACP,KAND;AAOA,WAAOY,OAAP;AACH;AACD,SAASK,wBAAT,CAAkCC,CAAlC,EAAqCC,CAArC,EAAwC;AACpC,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,EAAEG,MAAtB,EAA8BD,GAA9B,EAAmC;AAC/B,YAAI,CAAC1B,MAAM4B,uBAAN,CAA8BJ,EAAEE,CAAF,CAA9B,EAAoCD,EAAEC,CAAF,CAApC,CAAL,EACI,OAAO,KAAP;AACP;AACD,WAAO,IAAP;AACH;QACQX,iB,GAAAA,iB;QAAmBC,iB,GAAAA,iB;QAAmBf,W,GAAAA,W;QAAagB,gB,GAAAA,gB;QAAkBM,wB,GAAAA,wB;AAC9E","file":"Pieces.js","sourcesContent":["import R from 'ramda';\nimport * as Board from './Board';\nimport * as Piece from './Piece';\n// Remove piece from a list\nfunction removePiece(pieces, pieceToRemove) {\n    return pieces.filter(piece => !Piece.hasSamePosition(piece, pieceToRemove));\n}\nfunction createPieces(isBlack, positions) {\n    return positions.map(position => {\n        position.isBlack = isBlack;\n        return Piece.createPiece(position);\n    });\n}\nconst createPiecesCurried = R.curry(createPieces);\nconst createBlackPieces = createPiecesCurried(true);\nconst createWhitePieces = createPiecesCurried(false);\nfunction getPiecesOrdered(pieces, isBlack) {\n    const ordered = [];\n    pieces.forEach(piece => {\n        const y = Board.getY0Start7End(piece.position.y, isBlack);\n        if (!ordered[y])\n            ordered[y] = [piece];\n        else\n            ordered[y].push(piece);\n    });\n    return ordered;\n}\nfunction haveSamePieceAndPosition(a, b) {\n    for (let i = 0; i < a.length; i++) {\n        if (!Piece.hasSamePieceAndPosition(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nexport { createBlackPieces, createWhitePieces, removePiece, getPiecesOrdered, haveSamePieceAndPosition };\n//# sourceMappingURL=Pieces.js.map"]}