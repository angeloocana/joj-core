{"version":3,"sources":["../dist-esnext/Player.test.js"],"names":["assert","describe","name","player","createBlackPlayer","equal","ok","isBlack","createWhitePlayer","notOk","white","black","isAi","players","createPlayers"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;;;AACAC,SAAS,QAAT,EAAmB,YAAM;AACrBA,aAAS,mBAAT,EAA8B,YAAM;AAChC,YAAMC,OAAO,MAAb;AACA,YAAMC,SAAS,cAAOC,iBAAP,CAAyB,EAAEF,UAAF,EAAzB,CAAf;AACAF,eAAOK,KAAP,CAAaF,OAAOD,IAApB,EAA0BA,IAA1B,EAAgC,UAAhC;AACAF,eAAOM,EAAP,CAAUH,OAAOI,OAAjB,EAA0B,oBAA1B;AACH,KALD;AAMAN,aAAS,mBAAT,EAA8B,YAAM;AAChC,YAAMC,OAAO,MAAb;AACA,YAAMC,SAAS,cAAOK,iBAAP,CAAyB,EAAEN,UAAF,EAAzB,CAAf;AACAF,eAAOK,KAAP,CAAaF,OAAOD,IAApB,EAA0BA,IAA1B,EAAgC,UAAhC;AACAF,eAAOS,KAAP,CAAaN,OAAOI,OAApB,EAA6B,qBAA7B;AACH,KALD;AAMAN,aAAS,SAAT,EAAoB,YAAM;AACtBA,iBAAS,qBAAT,EAAgC,YAAM;AAClC,gBAAMS,QAAQ,EAAER,MAAM,SAAR,EAAd;AACA,gBAAMS,QAAQ,EAAET,MAAM,SAAR,EAAmBU,MAAM,IAAzB,EAAd;AACA,gBAAMC,UAAU,cAAOC,aAAP,CAAqB;AACjCH,4BADiC;AAEjCD;AAFiC,aAArB,CAAhB;AAIAV,mBAAOM,EAAP,CAAUO,QAAQH,KAAR,CAAcR,IAAd,KAAuBQ,MAAMR,IAAvC,EAA6C,uBAA7C;AACAF,mBAAOM,EAAP,CAAUO,QAAQF,KAAR,CAAcT,IAAd,KAAuBS,MAAMT,IAAvC,EAA6C,uBAA7C;AACAF,mBAAOM,EAAP,CAAUO,QAAQH,KAAR,CAAcE,IAAd,KAAuBF,MAAME,IAAvC,EAA6C,qBAA7C;AACAZ,mBAAOM,EAAP,CAAUO,QAAQF,KAAR,CAAcC,IAAd,KAAuBD,MAAMC,IAAvC,EAA6C,qBAA7C;AACH,SAXD;AAYH,KAbD;AAcH,CA3BD;AA4BA","file":"Player.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport { Player } from './index';\ndescribe('Player', () => {\n    describe('createBlackPlayer', () => {\n        const name = 'John';\n        const player = Player.createBlackPlayer({ name });\n        assert.equal(player.name, name, 'set name');\n        assert.ok(player.isBlack, 'set isBlack = true');\n    });\n    describe('createWhitePlayer', () => {\n        const name = 'John';\n        const player = Player.createWhitePlayer({ name });\n        assert.equal(player.name, name, 'set name');\n        assert.notOk(player.isBlack, 'set isBlack = false');\n    });\n    describe('Players', () => {\n        describe('New setting players', () => {\n            const white = { name: 'P White' };\n            const black = { name: 'P Black', isAi: true };\n            const players = Player.createPlayers({\n                black,\n                white\n            });\n            assert.ok(players.white.name === white.name, 'Set white player name');\n            assert.ok(players.black.name === black.name, 'Set black player name');\n            assert.ok(players.white.isAi === white.isAi, 'Set white player ai');\n            assert.ok(players.black.isAi === black.isAi, 'Set black player ai');\n        });\n    });\n});\n//# sourceMappingURL=Player.test.js.map"]}