{"version":3,"sources":["../dist-esnext/Positions.test.js"],"names":["assert","describe","it","position","x","y","positions","notOk","contains","ok","notContains"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;;;AACAC,SAAS,WAAT,EAAsB,YAAM;AACxBA,aAAS,mBAAT,EAA8B,YAAM;AAChCC,WAAG,cAAH,EAAmB,YAAM;AACrB,gBAAMC,WAAW,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB;AACA,gBAAMC,YAAY,CAAC,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,CAAlB;AACAL,mBAAOO,KAAP,CAAa,iBAAUC,QAAV,CAAmBF,SAAnB,EAA8BH,QAA9B,CAAb;AACH,SAJD;AAKAD,WAAG,UAAH,EAAe,YAAM;AACjB,gBAAMC,WAAW,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB;AACA,gBAAMC,YAAY,CAAC,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,CAAlB;AACAL,mBAAOS,EAAP,CAAU,iBAAUD,QAAV,CAAmBF,SAAnB,EAA8BH,QAA9B,CAAV;AACH,SAJD;AAKH,KAXD;AAYAF,aAAS,sBAAT,EAAiC,YAAM;AACnCC,WAAG,cAAH,EAAmB,YAAM;AACrB,gBAAMC,WAAW,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB;AACA,gBAAMC,YAAY,CAAC,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,CAAlB;AACAL,mBAAOS,EAAP,CAAU,iBAAUC,WAAV,CAAsBJ,SAAtB,EAAiCH,QAAjC,CAAV;AACH,SAJD;AAKAD,WAAG,UAAH,EAAe,YAAM;AACjB,gBAAMC,WAAW,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB;AACA,gBAAMC,YAAY,CAAC,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,CAAlB;AACAL,mBAAOO,KAAP,CAAa,iBAAUG,WAAV,CAAsBJ,SAAtB,EAAiCH,QAAjC,CAAb;AACH,SAJD;AAKH,KAXD;AAYH,CAzBD;AA0BA","file":"Positions.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport { Positions } from './index';\ndescribe('Positions', () => {\n    describe('positionsContains', () => {\n        it('not contains', () => {\n            const position = { x: 5, y: 2 };\n            const positions = [{ x: 4, y: 0 }, { x: 3, y: 0 }];\n            assert.notOk(Positions.contains(positions, position));\n        });\n        it('contains', () => {\n            const position = { x: 3, y: 0 };\n            const positions = [{ x: 4, y: 0 }, { x: 3, y: 0 }];\n            assert.ok(Positions.contains(positions, position));\n        });\n    });\n    describe('positionsNotContains', () => {\n        it('not contains', () => {\n            const position = { x: 5, y: 2 };\n            const positions = [{ x: 4, y: 0 }, { x: 3, y: 0 }];\n            assert.ok(Positions.notContains(positions, position));\n        });\n        it('contains', () => {\n            const position = { x: 3, y: 0 };\n            const positions = [{ x: 4, y: 0 }, { x: 3, y: 0 }];\n            assert.notOk(Positions.notContains(positions, position));\n        });\n    });\n});\n//# sourceMappingURL=Positions.test.js.map"]}