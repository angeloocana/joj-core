{"version":3,"sources":["../../dist-esnext/__testdata__/board.data.test.js"],"names":["startPiecesExpected","x","y","isBlack","cleanBoardExpected","cleanBoard","getCleanBoard","defaultBoardSize","initialBoard","getInitialBoard","initialBoardExpected","map","setPieceToBlack","setPieceToWhite","whiteRow","cleanRowWhite","cleanRowBlack","blackRow","unicodeStartBoard","xAndYStartBoard"],"mappings":";;;;;;;AAAA;;AACA,IAAMA,sBAAsB,CACxB,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EADwB,EACO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EADP,EAExB,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EAFwB,EAEO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EAFP,EAGxB,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EAHwB,EAGO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EAHP,EAIxB,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EAJwB,EAIO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EAJP,EAKxB,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EALwB,EAKO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EALP,EAMxB,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EANwB,EAMO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EANP,EAOxB,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EAPwB,EAOO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EAPP,EAQxB,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,IAAvB,EARwB,EAQO,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAcC,SAAS,KAAvB,EARP,CAA5B;AAUA;AACA,IAAMC,qBAAqB,CACvB,CAAC,EAAEH,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CADuB,EAEvB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAFuB,EAGvB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAHuB,EAIvB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAJuB,EAKvB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CALuB,EAMvB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CANuB,EAOvB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAPuB,EAQvB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CARuB,CAA3B;AAUA;;;AAGA,IAAMG,aAAa,aAAMC,aAAN,CAAoB,aAAMC,gBAA1B,CAAnB;AACA;;;;;;AAMA,IAAMC,eAAe,aAAMC,eAAN,CAAsB,aAAMF,gBAA5B,CAArB;AACA;AACA;AACA,IAAMG,uBAAuB,CACzB,CAAC,EAAET,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,EAAiIS,GAAjI,CAAqI,gBAASC,eAA9I,CADyB,EAEzB,CAAC,EAAEX,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAFyB,EAGzB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAHyB,EAIzB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAJyB,EAKzB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CALyB,EAMzB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CANyB,EAOzB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,CAPyB,EAQzB,CAAC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAD,EAAiB,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjB,EAAiC,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjC,EAAiD,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjD,EAAiE,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjE,EAAiF,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjF,EAAiG,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjG,EAAiH,EAAED,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAjH,EAAiIS,GAAjI,CAAqI,gBAASE,eAA9I,CARyB,CAA7B;AAUA,IAAMC,WAAW,oDAAjB;AACA,IAAMC,gBAAgB,gCAAtB;AACA,IAAMC,gBAAgB,gCAAtB;AACA,IAAMC,WAAW,oDAAjB;AACA,IAAMC,oBAAoBD,WACpBF,aADoB,GAEpBC,aAFoB,GAGpBD,aAHoB,GAIpBC,aAJoB,GAKpBD,aALoB,GAMpBC,aANoB,GAOpBF,QAPN;AAQA,IAAMK,kBAAkB,uDACpB,oDADoB,GAEpB,oDAFoB,GAGpB,oDAHoB,GAIpB,oDAJoB,GAKpB,oDALoB,GAMpB,oDANoB,GAOpB,oDAPJ;QAQSd,U,GAAAA,U;QAAYD,kB,GAAAA,kB;QAAoBI,Y,GAAAA,Y;QAAcE,oB,GAAAA,oB;QAAsBV,mB,GAAAA,mB;QAAqBkB,iB,GAAAA,iB;QAAmBC,e,GAAAA,e;AACrH","file":"board.data.test.js","sourcesContent":["import { Board, Position } from '../index';\nconst startPiecesExpected = [\n    { x: 7, y: 0, isBlack: true }, { x: 7, y: 7, isBlack: false },\n    { x: 6, y: 0, isBlack: true }, { x: 6, y: 7, isBlack: false },\n    { x: 5, y: 0, isBlack: true }, { x: 5, y: 7, isBlack: false },\n    { x: 4, y: 0, isBlack: true }, { x: 4, y: 7, isBlack: false },\n    { x: 3, y: 0, isBlack: true }, { x: 3, y: 7, isBlack: false },\n    { x: 2, y: 0, isBlack: true }, { x: 2, y: 7, isBlack: false },\n    { x: 1, y: 0, isBlack: true }, { x: 1, y: 7, isBlack: false },\n    { x: 0, y: 0, isBlack: true }, { x: 0, y: 7, isBlack: false }\n];\n// tslint:disable:max-line-length\nconst cleanBoardExpected = [\n    [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 3, y: 0 }, { x: 4, y: 0 }, { x: 5, y: 0 }, { x: 6, y: 0 }, { x: 7, y: 0 }],\n    [{ x: 0, y: 1 }, { x: 1, y: 1 }, { x: 2, y: 1 }, { x: 3, y: 1 }, { x: 4, y: 1 }, { x: 5, y: 1 }, { x: 6, y: 1 }, { x: 7, y: 1 }],\n    [{ x: 0, y: 2 }, { x: 1, y: 2 }, { x: 2, y: 2 }, { x: 3, y: 2 }, { x: 4, y: 2 }, { x: 5, y: 2 }, { x: 6, y: 2 }, { x: 7, y: 2 }],\n    [{ x: 0, y: 3 }, { x: 1, y: 3 }, { x: 2, y: 3 }, { x: 3, y: 3 }, { x: 4, y: 3 }, { x: 5, y: 3 }, { x: 6, y: 3 }, { x: 7, y: 3 }],\n    [{ x: 0, y: 4 }, { x: 1, y: 4 }, { x: 2, y: 4 }, { x: 3, y: 4 }, { x: 4, y: 4 }, { x: 5, y: 4 }, { x: 6, y: 4 }, { x: 7, y: 4 }],\n    [{ x: 0, y: 5 }, { x: 1, y: 5 }, { x: 2, y: 5 }, { x: 3, y: 5 }, { x: 4, y: 5 }, { x: 5, y: 5 }, { x: 6, y: 5 }, { x: 7, y: 5 }],\n    [{ x: 0, y: 6 }, { x: 1, y: 6 }, { x: 2, y: 6 }, { x: 3, y: 6 }, { x: 4, y: 6 }, { x: 5, y: 6 }, { x: 6, y: 6 }, { x: 7, y: 6 }],\n    [{ x: 0, y: 7 }, { x: 1, y: 7 }, { x: 2, y: 7 }, { x: 3, y: 7 }, { x: 4, y: 7 }, { x: 5, y: 7 }, { x: 6, y: 7 }, { x: 7, y: 7 }]\n];\n/**\n * Clean 8x8 board\n */\nconst cleanBoard = Board.getCleanBoard(Board.defaultBoardSize);\n/**\n * [ATTENTION] USE IT ONLY FOR TESTS!\n * Code for any board size =D\n *\n * Default 8x8 board in start position\n */\nconst initialBoard = Board.getInitialBoard(Board.defaultBoardSize);\n// tslint:disable:no-string-literal\n// tslint:disable:max-line-length\nconst initialBoardExpected = [\n    [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 3, y: 0 }, { x: 4, y: 0 }, { x: 5, y: 0 }, { x: 6, y: 0 }, { x: 7, y: 0 }].map(Position.setPieceToBlack),\n    [{ x: 0, y: 1 }, { x: 1, y: 1 }, { x: 2, y: 1 }, { x: 3, y: 1 }, { x: 4, y: 1 }, { x: 5, y: 1 }, { x: 6, y: 1 }, { x: 7, y: 1 }],\n    [{ x: 0, y: 2 }, { x: 1, y: 2 }, { x: 2, y: 2 }, { x: 3, y: 2 }, { x: 4, y: 2 }, { x: 5, y: 2 }, { x: 6, y: 2 }, { x: 7, y: 2 }],\n    [{ x: 0, y: 3 }, { x: 1, y: 3 }, { x: 2, y: 3 }, { x: 3, y: 3 }, { x: 4, y: 3 }, { x: 5, y: 3 }, { x: 6, y: 3 }, { x: 7, y: 3 }],\n    [{ x: 0, y: 4 }, { x: 1, y: 4 }, { x: 2, y: 4 }, { x: 3, y: 4 }, { x: 4, y: 4 }, { x: 5, y: 4 }, { x: 6, y: 4 }, { x: 7, y: 4 }],\n    [{ x: 0, y: 5 }, { x: 1, y: 5 }, { x: 2, y: 5 }, { x: 3, y: 5 }, { x: 4, y: 5 }, { x: 5, y: 5 }, { x: 6, y: 5 }, { x: 7, y: 5 }],\n    [{ x: 0, y: 6 }, { x: 1, y: 6 }, { x: 2, y: 6 }, { x: 3, y: 6 }, { x: 4, y: 6 }, { x: 5, y: 6 }, { x: 6, y: 6 }, { x: 7, y: 6 }],\n    [{ x: 0, y: 7 }, { x: 1, y: 7 }, { x: 2, y: 7 }, { x: 3, y: 7 }, { x: 4, y: 7 }, { x: 5, y: 7 }, { x: 6, y: 7 }, { x: 7, y: 7 }].map(Position.setPieceToWhite)\n];\nconst whiteRow = '\\u{25D9}\\u{25CF}\\u{25D9}\\u{25CF}\\u{25D9}\\u{25CF}\\u{25D9}\\u{25CF}\\n';\nconst cleanRowWhite = '\\u{2588} \\u{2588} \\u{2588} \\u{2588} \\n';\nconst cleanRowBlack = ' \\u{2588} \\u{2588} \\u{2588} \\u{2588}\\n';\nconst blackRow = '\\u{25CB}\\u{25D8}\\u{25CB}\\u{25D8}\\u{25CB}\\u{25D8}\\u{25CB}\\u{25D8}\\n';\nconst unicodeStartBoard = blackRow\n    + cleanRowWhite\n    + cleanRowBlack\n    + cleanRowWhite\n    + cleanRowBlack\n    + cleanRowWhite\n    + cleanRowBlack\n    + whiteRow;\nconst xAndYStartBoard = ' 0,0 | 1,0 | 2,0 | 3,0 | 4,0 | 5,0 | 6,0 | 7,0 |\\n' +\n    ' 0,1 | 1,1 | 2,1 | 3,1 | 4,1 | 5,1 | 6,1 | 7,1 |\\n' +\n    ' 0,2 | 1,2 | 2,2 | 3,2 | 4,2 | 5,2 | 6,2 | 7,2 |\\n' +\n    ' 0,3 | 1,3 | 2,3 | 3,3 | 4,3 | 5,3 | 6,3 | 7,3 |\\n' +\n    ' 0,4 | 1,4 | 2,4 | 3,4 | 4,4 | 5,4 | 6,4 | 7,4 |\\n' +\n    ' 0,5 | 1,5 | 2,5 | 3,5 | 4,5 | 5,5 | 6,5 | 7,5 |\\n' +\n    ' 0,6 | 1,6 | 2,6 | 3,6 | 4,6 | 5,6 | 6,6 | 7,6 |\\n' +\n    ' 0,7 | 1,7 | 2,7 | 3,7 | 4,7 | 5,7 | 6,7 | 7,7 |\\n';\nexport { cleanBoard, cleanBoardExpected, initialBoard, initialBoardExpected, startPiecesExpected, unicodeStartBoard, xAndYStartBoard };\n//# sourceMappingURL=board.data.test.js.map"]}