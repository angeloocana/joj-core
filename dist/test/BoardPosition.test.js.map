{"version":3,"sources":["../../dist-esnext/test/BoardPosition.test.js"],"names":["describe","position","beforeEach","x","y","it","setPiece","actual","isBlackPiece","removePiece","position1","position2","isSamePositionAs","isEmpty"],"mappings":"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","file":"BoardPosition.test.js","sourcesContent":["import { equal } from 'ptz-assert';\nimport { BoardPosition } from '../BoardPosition';\ndescribe('BoardPosition', () => {\n    describe('New', () => {\n        var position;\n        beforeEach(() => {\n            position = new BoardPosition({ x: 0, y: 0 });\n        });\n        it('x');\n    });\n    describe('isBlackPiece', () => {\n        var position;\n        beforeEach(() => {\n            position = new BoardPosition({ x: 0, y: 0 });\n        });\n        it('true', () => {\n            position.setPiece(true);\n            const actual = position.isBlackPiece();\n            equal(actual, true);\n        });\n        it('false', () => {\n            position.setPiece(false);\n            const actual = position.isBlackPiece();\n            equal(actual, false);\n        });\n        it('null', () => {\n            position.removePiece();\n            const actual = position.isBlackPiece();\n            equal(actual, null);\n        });\n    });\n    describe('isSamePositionAs', () => {\n        it('true', () => {\n            const position1 = new BoardPosition({ x: 2, y: 3 });\n            const position2 = new BoardPosition({ x: 2, y: 3 });\n            equal(position1.isSamePositionAs(position2), true);\n        });\n        it('false', () => {\n            const position1 = new BoardPosition({ x: 3, y: 2 });\n            const position2 = new BoardPosition({ x: 2, y: 3 });\n            equal(position1.isSamePositionAs(position2), false);\n        });\n    });\n    describe('setPiece', () => {\n        var position;\n        beforeEach(() => {\n            position = new BoardPosition({ x: 0, y: 0 });\n        });\n        it('black', () => {\n            position.setPiece(true);\n            equal(position.isBlackPiece(), true);\n            equal(position.isEmpty(), false);\n        });\n        it('white', () => {\n            position.setPiece(false);\n            equal(position.isBlackPiece(), false);\n            equal(position.isEmpty(), false);\n        });\n        it('empty', () => {\n            position.setPiece(null);\n            equal(position.isEmpty(), true);\n        });\n    });\n    describe('isEmpty', () => {\n        var position;\n        beforeEach(() => {\n            position = new BoardPosition({ x: 2, y: 3 });\n        });\n        it('true', () => {\n            position.removePiece();\n            equal(position.isEmpty(), true);\n        });\n        it('false, black piece', () => {\n            position.setPiece(true);\n            equal(position.isEmpty(), false);\n        });\n        it('false, white piece', () => {\n            position.setPiece(false);\n            equal(position.isEmpty(), false);\n        });\n    });\n});\n//# sourceMappingURL=BoardPosition.test.js.map"]}