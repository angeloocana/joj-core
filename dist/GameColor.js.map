{"version":3,"sources":["../dist-esnext/GameColor.js"],"names":["create","boardConf","isBlack","pieces","black","white","startRow","endRow","score","winners","preWinnersPoints","jumps","points","nMoves","getColorAfterMove","color","move","map","piece","position","x","from","y","to","e","getScore","initialWinners","reduce","setColorScore","hasWon","length"],"mappings":";;;;;;;AAAA;;;;;;AACA,SAASA,MAAT,CAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4C;AAAA,eACXD,UAAUD,UAAUG,KAApB,GAA4BH,UAAUI,KAD3B;AAAA,QAChCC,QADgC,QAChCA,QADgC;AAAA,QACtBC,MADsB,QACtBA,MADsB;;AAExC,WAAO;AACHC,eAAO;AACHC,qBAAS,CADN;AAEHC,8BAAkB;AAFf,SADJ;AAKHC,eAAO,CALJ;AAMHC,gBAAQ,CANL;AAOHC,gBAAQ,CAPL;AAQHV,sBARG;AASHD,wBATG;AAUHI,0BAVG;AAWHC;AAXG,KAAP;AAaH;AACD,SAASO,iBAAT,CAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACpC,QAAI;AACAD,cAAMZ,MAAN,GAAeY,MAAMZ,MAAN,CAAac,GAAb,CAAiB,iBAAS;AACrC,gBAAIC,MAAMC,QAAN,CAAeC,CAAf,KAAqBJ,KAAKK,IAAL,CAAUD,CAA/B,IACGF,MAAMC,QAAN,CAAeG,CAAf,KAAqBN,KAAKK,IAAL,CAAUC,CADtC,EACyC;AACrCJ,sBAAMC,QAAN,CAAeC,CAAf,GAAmBJ,KAAKO,EAAL,CAAQH,CAA3B;AACAF,sBAAMC,QAAN,CAAeG,CAAf,GAAmBN,KAAKO,EAAL,CAAQD,CAA3B;AACH;AACD,mBAAOJ,KAAP;AACH,SAPc,CAAf;AAQH,KATD,CAUA,OAAOM,CAAP,EAAU;AACN,8BAAI,OAAJ,EAAaT,KAAb;AACA,8BAAI,MAAJ,EAAYC,IAAZ;AACA,cAAMQ,CAAN;AACH;AACD,WAAOT,KAAP;AACH;AACD,SAASU,QAAT,CAAkBV,KAAlB,EAAyB;AACrB,QAAMW,iBAAiB;AACnBjB,iBAAS,CADU;AAEnBC,0BAAkB;AAFC,KAAvB;AAIA,WAAOK,MAAMZ,MAAN,CAAawB,MAAb,CAAoB,UAAClB,OAAD,EAAUS,KAAV,EAAoB;AAC3C,YAAIA,MAAMC,QAAN,CAAeG,CAAf,KAAqBP,MAAMR,MAA/B,EACIE,QAAQA,OAAR,IAAmB,CAAnB,CADJ,KAGIA,QAAQC,gBAAR,IAA4BK,MAAMR,MAAN,KAAiB,CAAjB,GACtBQ,MAAMT,QAAN,GAAiBY,MAAMC,QAAN,CAAeG,CADV,GAEtBJ,MAAMC,QAAN,CAAeG,CAFrB;AAGJ,eAAOb,OAAP;AACH,KARM,EAQJiB,cARI,CAAP;AASH;AACD,SAASE,aAAT,CAAuBb,KAAvB,EAA8B;AAC1BA,UAAMP,KAAN,GAAciB,SAASV,KAAT,CAAd;AACA,WAAOA,KAAP;AACH;AACD,SAASc,MAAT,CAAgBd,KAAhB,EAAuB;AACnB,WAAOA,MAAMP,KAAN,CAAYC,OAAZ,KAAwBM,MAAMZ,MAAN,CAAa2B,MAA5C;AACH;QACQ9B,M,GAAAA,M;QAAQc,iB,GAAAA,iB;QAAmBW,Q,GAAAA,Q;QAAUG,a,GAAAA,a;QAAeC,M,GAAAA,M;AAC7D","file":"GameColor.js","sourcesContent":["import log from 'ptz-log';\nfunction create(boardConf, isBlack, pieces) {\n    const { startRow, endRow } = isBlack ? boardConf.black : boardConf.white;\n    return {\n        score: {\n            winners: 0,\n            preWinnersPoints: 0\n        },\n        jumps: 0,\n        points: 0,\n        nMoves: 0,\n        pieces,\n        isBlack,\n        startRow,\n        endRow\n    };\n}\nfunction getColorAfterMove(color, move) {\n    try {\n        color.pieces = color.pieces.map(piece => {\n            if (piece.position.x === move.from.x\n                && piece.position.y === move.from.y) {\n                piece.position.x = move.to.x;\n                piece.position.y = move.to.y;\n            }\n            return piece;\n        });\n    }\n    catch (e) {\n        log('color', color);\n        log('move', move);\n        throw e;\n    }\n    return color;\n}\nfunction getScore(color) {\n    const initialWinners = {\n        winners: 0,\n        preWinnersPoints: 0\n    };\n    return color.pieces.reduce((winners, piece) => {\n        if (piece.position.y === color.endRow)\n            winners.winners += 1;\n        else\n            winners.preWinnersPoints += color.endRow === 0\n                ? color.startRow - piece.position.y\n                : piece.position.y;\n        return winners;\n    }, initialWinners);\n}\nfunction setColorScore(color) {\n    color.score = getScore(color);\n    return color;\n}\nfunction hasWon(color) {\n    return color.score.winners === color.pieces.length;\n}\nexport { create, getColorAfterMove, getScore, setColorScore, hasWon };\n//# sourceMappingURL=GameColor.js.map"]}