{"version":3,"sources":["../dist-esnext/GameColor.js"],"names":["create","boardConf","isBlack","pieces","black","white","startRow","endRow","score","won","winners","preWinnersPoints","jumps","points","nMoves","getPiecesAfterMove","move","map","piece","position","x","from","y","to","getColorScore","color","reduce","length","getColorAfterMove"],"mappings":";;;;;AAAA,SAASA,MAAT,CAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4C;AAAA,eACXD,UAAUD,UAAUG,KAApB,GAA4BH,UAAUI,KAD3B;AAAA,QAChCC,QADgC,QAChCA,QADgC;AAAA,QACtBC,MADsB,QACtBA,MADsB;;AAExC,WAAO;AACHC,eAAO;AACHC,iBAAK,KADF;AAEHC,qBAAS,CAFN;AAGHC,8BAAkB;AAHf,SADJ;AAMHC,eAAO,CANJ;AAOHC,gBAAQ,CAPL;AAQHC,gBAAQ,CARL;AASHX,sBATG;AAUHD,wBAVG;AAWHI,0BAXG;AAYHC;AAZG,KAAP;AAcH;AACD;;;;AAIA,SAASQ,kBAAT,CAA4BZ,MAA5B,EAAoCa,IAApC,EAA0C;AACtC,WAAOb,OAAOc,GAAP,CAAW,iBAAS;AACvB,YAAIC,MAAMC,QAAN,CAAeC,CAAf,KAAqBJ,KAAKK,IAAL,CAAUD,CAA/B,IACGF,MAAMC,QAAN,CAAeG,CAAf,KAAqBN,KAAKK,IAAL,CAAUC,CADtC,EACyC;AACrCJ,kBAAMC,QAAN,CAAeC,CAAf,GAAmBJ,KAAKO,EAAL,CAAQH,CAA3B;AACAF,kBAAMC,QAAN,CAAeG,CAAf,GAAmBN,KAAKO,EAAL,CAAQD,CAA3B;AACH;AACD,eAAOJ,KAAP;AACH,KAPM,CAAP;AAQH;AACD,SAASM,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAIjB,QAAQ;AACRC,aAAK,KADG;AAERC,iBAAS,CAFD;AAGRC,0BAAkB;AAHV,KAAZ;AAKAH,YAAQiB,MAAMtB,MAAN,CAAauB,MAAb,CAAoB,UAAChB,OAAD,EAAUQ,KAAV,EAAoB;AAC5C,YAAIA,MAAMC,QAAN,CAAeG,CAAf,KAAqBG,MAAMlB,MAA/B,EACIG,QAAQA,OAAR,IAAmB,CAAnB,CADJ,KAGIA,QAAQC,gBAAR,IAA4Bc,MAAMlB,MAAN,KAAiB,CAAjB,GACtBkB,MAAMnB,QAAN,GAAiBY,MAAMC,QAAN,CAAeG,CADV,GAEtBJ,MAAMC,QAAN,CAAeG,CAFrB;AAGJ,eAAOZ,OAAP;AACH,KARO,EAQLF,KARK,CAAR;AASAA,UAAMC,GAAN,GAAYD,MAAME,OAAN,KAAkBe,MAAMtB,MAAN,CAAawB,MAA3C;AACA,WAAOnB,KAAP;AACH;AACD;;;;;;;AAOA,SAASoB,iBAAT,CAA2BH,KAA3B,EAAkCT,IAAlC,EAAwC;AACpCS,UAAMtB,MAAN,GAAeY,mBAAmBU,MAAMtB,MAAzB,EAAiCa,IAAjC,CAAf;AACAS,UAAMjB,KAAN,GAAcgB,cAAcC,KAAd,CAAd;AACA,WAAOA,KAAP;AACH;QACQzB,M,GAAAA,M;QAAQ4B,iB,GAAAA,iB;QAAmBJ,a,GAAAA,a;AACpC","file":"GameColor.js","sourcesContent":["function create(boardConf, isBlack, pieces) {\n    const { startRow, endRow } = isBlack ? boardConf.black : boardConf.white;\n    return {\n        score: {\n            won: false,\n            winners: 0,\n            preWinnersPoints: 0\n        },\n        jumps: 0,\n        points: 0,\n        nMoves: 0,\n        pieces,\n        isBlack,\n        startRow,\n        endRow\n    };\n}\n/**\n * Takes a list of pieces and move.\n * Returns the pieces changed with move positions.\n */\nfunction getPiecesAfterMove(pieces, move) {\n    return pieces.map(piece => {\n        if (piece.position.x === move.from.x\n            && piece.position.y === move.from.y) {\n            piece.position.x = move.to.x;\n            piece.position.y = move.to.y;\n        }\n        return piece;\n    });\n}\nfunction getColorScore(color) {\n    let score = {\n        won: false,\n        winners: 0,\n        preWinnersPoints: 0\n    };\n    score = color.pieces.reduce((winners, piece) => {\n        if (piece.position.y === color.endRow)\n            winners.winners += 1;\n        else\n            winners.preWinnersPoints += color.endRow === 0\n                ? color.startRow - piece.position.y\n                : piece.position.y;\n        return winners;\n    }, score);\n    score.won = score.winners === color.pieces.length;\n    return score;\n}\n/**\n * Takes a GameColor and move.\n * Sets:\n *  - .pieces = getPiecesAfterMove.\n *  - .score = getScore.\n * Returns GameColor after move.\n */\nfunction getColorAfterMove(color, move) {\n    color.pieces = getPiecesAfterMove(color.pieces, move);\n    color.score = getColorScore(color);\n    return color;\n}\nexport { create, getColorAfterMove, getColorScore };\n//# sourceMappingURL=GameColor.js.map"]}