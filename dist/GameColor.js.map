{"version":3,"sources":["../dist-esnext/GameColor.js"],"names":["create","boardConf","isBlack","pieces","black","white","startRow","endRow","score","winners","preWinnersPoints","jumps","points","nMoves","getColorAfterMove","color","move","map","piece","position","x","from","y","to","getScore","initialWinners","reduce","hasWon","length"],"mappings":";;;;;AAAA,SAASA,MAAT,CAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4C;AAAA,eACXD,UAAUD,UAAUG,KAApB,GAA4BH,UAAUI,KAD3B;AAAA,QAChCC,QADgC,QAChCA,QADgC;AAAA,QACtBC,MADsB,QACtBA,MADsB;;AAExC,WAAO;AACHC,eAAO;AACHC,qBAAS,CADN;AAEHC,8BAAkB;AAFf,SADJ;AAKHC,eAAO,CALJ;AAMHC,gBAAQ,CANL;AAOHC,gBAAQ,CAPL;AAQHV,sBARG;AASHD,wBATG;AAUHI,0BAVG;AAWHC;AAXG,KAAP;AAaH;AACD,SAASO,iBAAT,CAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACpCD,UAAMZ,MAAN,GAAeY,MAAMZ,MAAN,CAAac,GAAb,CAAiB,iBAAS;AACrC,YAAIC,MAAMC,QAAN,CAAeC,CAAf,KAAqBJ,KAAKK,IAAL,CAAUD,CAA/B,IACGF,MAAMC,QAAN,CAAeG,CAAf,KAAqBN,KAAKK,IAAL,CAAUC,CADtC,EACyC;AACrCJ,kBAAMC,QAAN,CAAeC,CAAf,GAAmBJ,KAAKO,EAAL,CAAQH,CAA3B;AACAF,kBAAMC,QAAN,CAAeG,CAAf,GAAmBN,KAAKO,EAAL,CAAQD,CAA3B;AACH;AACD,eAAOJ,KAAP;AACH,KAPc,CAAf;AAQA,WAAOH,KAAP;AACH;AACD,SAASS,QAAT,CAAkBT,KAAlB,EAAyB;AACrB,QAAMU,iBAAiB;AACnBhB,iBAAS,CADU;AAEnBC,0BAAkB;AAFC,KAAvB;AAIA,WAAOK,MAAMZ,MAAN,CAAauB,MAAb,CAAoB,UAACjB,OAAD,EAAUS,KAAV,EAAoB;AAC3C,YAAIA,MAAMC,QAAN,CAAeG,CAAf,KAAqBP,MAAMR,MAA/B,EACIE,QAAQA,OAAR,IAAmB,CAAnB,CADJ,KAGIA,QAAQC,gBAAR,IAA4BK,MAAMR,MAAN,KAAiB,CAAjB,GACtBQ,MAAMT,QAAN,GAAiBY,MAAMC,QAAN,CAAeG,CADV,GAEtBJ,MAAMC,QAAN,CAAeG,CAFrB;AAGJ,eAAOb,OAAP;AACH,KARM,EAQJgB,cARI,CAAP;AASH;AACD,SAASE,MAAT,CAAgBZ,KAAhB,EAAuB;AACnB,WAAOA,MAAMP,KAAN,CAAYC,OAAZ,KAAwBM,MAAMZ,MAAN,CAAayB,MAA5C;AACH;QACQ5B,M,GAAAA,M;QAAQc,iB,GAAAA,iB;QAAmBU,Q,GAAAA,Q;QAAUG,M,GAAAA,M;AAC9C","file":"GameColor.js","sourcesContent":["function create(boardConf, isBlack, pieces) {\n    const { startRow, endRow } = isBlack ? boardConf.black : boardConf.white;\n    return {\n        score: {\n            winners: 0,\n            preWinnersPoints: 0\n        },\n        jumps: 0,\n        points: 0,\n        nMoves: 0,\n        pieces,\n        isBlack,\n        startRow,\n        endRow\n    };\n}\nfunction getColorAfterMove(color, move) {\n    color.pieces = color.pieces.map(piece => {\n        if (piece.position.x === move.from.x\n            && piece.position.y === move.from.y) {\n            piece.position.x = move.to.x;\n            piece.position.y = move.to.y;\n        }\n        return piece;\n    });\n    return color;\n}\nfunction getScore(color) {\n    const initialWinners = {\n        winners: 0,\n        preWinnersPoints: 0\n    };\n    return color.pieces.reduce((winners, piece) => {\n        if (piece.position.y === color.endRow)\n            winners.winners += 1;\n        else\n            winners.preWinnersPoints += color.endRow === 0\n                ? color.startRow - piece.position.y\n                : piece.position.y;\n        return winners;\n    }, initialWinners);\n}\nfunction hasWon(color) {\n    return color.score.winners === color.pieces.length;\n}\nexport { create, getColorAfterMove, getScore, hasWon };\n//# sourceMappingURL=GameColor.js.map"]}