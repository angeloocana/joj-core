{"version":3,"sources":["../dist-esnext/Position.js"],"names":["setPiece","position","isBlack","removePiece","hasBlackPiece","hasWhitePiece","hasPiece","hasNoPiece","isSamePositionAs","p1","p2","x","y"],"mappings":";;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,QAAlB,EAA4BC,OAA5B,EAAqC;AACjCD,aAASC,OAAT,GAAmBA,OAAnB;AACA,WAAOD,QAAP;AACH;AACD,SAASE,WAAT,CAAqBF,QAArB,EAA+B;AAC3B,WAAOA,SAASC,OAAhB;AACA,WAAOD,QAAP;AACH;AACD,IAAMG,gBAAgB,mBAAO,SAAP,EAAkB,IAAlB,CAAtB;AACA,IAAMC,gBAAgB,mBAAO,SAAP,EAAkB,KAAlB,CAAtB;AACA,IAAMC,WAAW,oBAAQ,CAACF,aAAD,EAAgBC,aAAhB,CAAR,CAAjB;AACA,IAAME,aAAa,gCAAaD,QAAb,CAAnB;AACA,SAASE,gBAAT,CAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AAC9B,WAAOD,GAAGE,CAAH,KAASD,GAAGC,CAAZ,IAAiBF,GAAGG,CAAH,KAASF,GAAGE,CAApC;AACH;QACQJ,gB,GAAAA,gB;QAAkBJ,a,GAAAA,a;QAAeE,Q,GAAAA,Q;QAAUC,U,GAAAA,U;QAAYF,a,GAAAA,a;QAAeF,W,GAAAA,W;QAAaH,Q,GAAAA,Q;AAC5F","file":"Position.js","sourcesContent":["import { anyPass, compose, not, propEq } from 'ramda';\n// export class Position implements IPosition {\n//     x: number;\n//     y: number;\n//     piece?: string; // PieceType;\n//     lastMoviment?: IMove;\n//     lastPosition?: IPosition;\n//     jumpingBlackPiece?: boolean;\n//     jumps?: number;\n//     iCanGoHere?: boolean;\n//     lastMove?: boolean;\n//     lastMoveJump?: boolean;\n//     isWhiteHome?: boolean;\n//     isBlackHome?: boolean;\n//     constructor(args: IPositionArgs) {\n//         this.x = args.x;\n//         this.y = args.y;\n//         this.setPiece(args.isBlackPiece);\n//         // this.isWhiteHome = false;\n//         // this.isBlackHome = ;\n//     }\n// }\nfunction setPiece(position, isBlack) {\n    position.isBlack = isBlack;\n    return position;\n}\nfunction removePiece(position) {\n    delete position.isBlack;\n    return position;\n}\nconst hasBlackPiece = propEq('isBlack', true);\nconst hasWhitePiece = propEq('isBlack', false);\nconst hasPiece = anyPass([hasBlackPiece, hasWhitePiece]);\nconst hasNoPiece = compose(not, hasPiece);\nfunction isSamePositionAs(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\nexport { isSamePositionAs, hasBlackPiece, hasPiece, hasNoPiece, hasWhitePiece, removePiece, setPiece };\n//# sourceMappingURL=Position.js.map"]}