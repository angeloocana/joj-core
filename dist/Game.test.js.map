{"version":3,"sources":["../dist-esnext/Game.test.js"],"names":["assert","describe","it","game","create","players","white","name","foto","black","cleanGame","getCleanGameToSaveOnServer","equal","ended","deepEqual","movements","move","from","x","y","to","getGameAfterMove","length"],"mappings":";;AAAA;;IAAYA,M;;AACZ;;;;AACAC,SAAS,MAAT,EAAiB,YAAM;AACnBA,aAAS,QAAT,EAAmB,YAAM;AACrBC,WAAG,oBAAH;AACH,KAFD;AAGAD,aAAS,yBAAT,EAAoC,YAAM;AACtCC,WAAG,2BAAH;AACAA,WAAG,gCAAH;AACAA,WAAG,2BAAH;AACAA,WAAG,gCAAH;AACH,KALD;AAMAD,aAAS,4BAAT,EAAuC,YAAM;AACzCC,WAAG,kBAAH,EAAuB,YAAM;AACzB,gBAAMC,OAAO,YAAKC,MAAL,CAAY;AACrBC,yBAAS;AACLC,2BAAO,EAAEC,MAAM,QAAR,EAAkBC,MAAM,oBAAxB,EADF;AAELC,2BAAO,EAAEF,MAAM,MAAR,EAAgBC,MAAM,oBAAtB;AAFF;AADY,aAAZ,CAAb;AAMA,gBAAME,YAAY,YAAKC,0BAAL,CAAgCR,IAAhC,CAAlB;AACAH,mBAAOY,KAAP,CAAaT,KAAKU,KAAlB,EAAyBH,UAAUG,KAAnC;AACAb,mBAAOc,SAAP,CAAiBX,KAAKY,SAAtB,EAAiCL,UAAUK,SAA3C;AACH,SAVD;AAWAb,WAAG,oBAAH,EAAyB,YAAM;AAC3B,gBAAIC,OAAO,YAAKC,MAAL,CAAY;AACnBC,yBAAS;AACLC,2BAAO,EAAEC,MAAM,QAAR,EAAkBC,MAAM,oBAAxB,EADF;AAELC,2BAAO,EAAEF,MAAM,MAAR,EAAgBC,MAAM,oBAAtB;AAFF;AADU,aAAZ,CAAX;AAMA,gBAAMQ,OAAO;AACTC,sBAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EADG;AAETC,oBAAI,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX;AAFK,aAAb;AAIAhB,mBAAO,YAAKkB,gBAAL,CAAsBlB,IAAtB,EAA4Ba,IAA5B,EAAkC,KAAlC,CAAP;AACA,gBAAMN,YAAY,YAAKC,0BAAL,CAAgCR,IAAhC,CAAlB;AACAH,mBAAOY,KAAP,CAAaT,KAAKU,KAAlB,EAAyBH,UAAUG,KAAnC;AACAb,mBAAOY,KAAP,CAAaF,UAAUK,SAAV,CAAoBO,MAAjC,EAAyC,CAAzC;AACAtB,mBAAOc,SAAP,CAAiBX,KAAKY,SAAtB,EAAiCL,UAAUK,SAA3C;AACH,SAhBD;AAiBH,KA7BD;AA8BH,CAxCD;AAyCA","file":"Game.test.js","sourcesContent":["import * as assert from 'ptz-assert';\nimport { Game, Move } from './index';\ndescribe('Game', () => {\n    describe('create', () => {\n        it('creates a new game');\n    });\n    describe('needToValidateMovements', () => {\n        it('when null should validate');\n        it('when undefined should validate');\n        it('when true should validate');\n        it('when false should NOT validate');\n    });\n    describe('getCleanGameToSaveOnServer', () => {\n        it('map no movements', () => {\n            const game = Game.create({\n                players: {\n                    white: { name: 'Angelo', foto: 'img/black_user.png' },\n                    black: { name: 'Gabi', foto: 'img/white_user.png' }\n                }\n            });\n            const cleanGame = Game.getCleanGameToSaveOnServer(game);\n            assert.equal(game.ended, cleanGame.ended);\n            assert.deepEqual(game.movements, cleanGame.movements);\n        });\n        it('map with movements', () => {\n            let game = Game.create({\n                players: {\n                    white: { name: 'Angelo', foto: 'img/black_user.png' },\n                    black: { name: 'Gabi', foto: 'img/white_user.png' }\n                }\n            });\n            const move = {\n                from: { x: 4, y: 7 },\n                to: { x: 4, y: 6 }\n            };\n            game = Move.getGameAfterMove(game, move, false);\n            const cleanGame = Game.getCleanGameToSaveOnServer(game);\n            assert.equal(game.ended, cleanGame.ended);\n            assert.equal(cleanGame.movements.length, 1);\n            assert.deepEqual(game.movements, cleanGame.movements);\n        });\n    });\n});\n//# sourceMappingURL=Game.test.js.map"]}