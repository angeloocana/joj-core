{"version":3,"sources":["../dist-esnext/Game.test.js"],"names":["describe","it","players","white","name","foto","black","game","gameBeforeLastMove","from","x","y","to","movements","length","beforeEach","move","cleanGame","ended","blackWin"],"mappings":";;AAAA;;AACA;;AACAA,SAAS,MAAT,EAAiB,YAAM;AACnBA,aAAS,yBAAT,EAAoC,YAAM;AACtCC,WAAG,2BAAH;AACAA,WAAG,gCAAH;AACAA,WAAG,2BAAH;AACAA,WAAG,gCAAH;AACH,KALD;AAMAD,aAAS,UAAT,EAAqB,YAAM;AACvBC,WAAG,uBAAH,EAA4B,YAAM;AAC9B,gBAAMC,UAAU;AACZC,uBAAO,EAAEC,MAAM,QAAR,EAAkBC,MAAM,oBAAxB,EADK;AAEZC,uBAAO,EAAEF,MAAM,MAAR,EAAgBC,MAAM,oBAAtB;AAFK,aAAhB;AAIA,gBAAIE,OAAO,uBAAW,EAAEL,gBAAF,EAAX,CAAX;AACA,gBAAMM,qBAAqB,6BAAiBD,IAAjB,EAAuB,EAAEE,MAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAR,EAAwBC,IAAI,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAA5B,EAAvB,CAA3B;AACAJ,mBAAO,6BAAiBC,kBAAjB,EAAqC,EAAEC,MAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EAAR,EAAwBC,IAAI,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX,EAA5B,EAArC,CAAP;AACAJ,mBAAO,kCAAsBA,IAAtB,CAAP;AACA,kCAAMC,mBAAmBK,SAAnB,CAA6BC,MAAnC,EAA2CP,KAAKM,SAAL,CAAeC,MAA1D;AACA,sCAAUN,mBAAmBK,SAA7B,EAAwCN,KAAKM,SAA7C;AACH,SAXD;AAYH,KAbD;AAcAb,aAAS,MAAT,EAAiB,YAAM;AACnB,YAAIO,IAAJ;AACAQ,mBAAW,YAAM;AACbR,mBAAO,uBAAW;AACdL,yBAAS;AACLC,2BAAO,EAAEC,MAAM,QAAR,EAAkBC,MAAM,oBAAxB,EADF;AAELC,2BAAO,EAAEF,MAAM,MAAR,EAAgBC,MAAM,oBAAtB;AAFF;AADK,aAAX,CAAP;AAMH,SAPD;AAQAJ,WAAG,+BAAH,EAAoC,YAAM;AACtC,gBAAMe,OAAO;AACTP,sBAAM,EAAEC,GAAG,CAAL,EAAQC,GAAG,CAAX,EADG;AAETC,oBAAI,EAAEF,GAAG,CAAL,EAAQC,GAAG,CAAX;AAFK,aAAb;AAIA,mCAAO,YAAM;AACTJ,uBAAO,6BAAiBA,IAAjB,EAAuBS,IAAvB,CAAP;AACH,aAFD;AAGH,SARD;AASH,KAnBD;AAoBAhB,aAAS,4BAAT,EAAuC,YAAM;AACzCC,WAAG,KAAH,EAAU,YAAM;AACZ,gBAAMM,OAAO,uBAAW;AACpBL,yBAAS;AACLC,2BAAO,EAAEC,MAAM,QAAR,EAAkBC,MAAM,oBAAxB,EADF;AAELC,2BAAO,EAAEF,MAAM,MAAR,EAAgBC,MAAM,oBAAtB;AAFF;AADW,aAAX,CAAb;AAMA,gBAAMY,YAAY,uCAA2BV,IAA3B,CAAlB;AACA,kCAAMA,KAAKW,KAAX,EAAkBD,UAAUC,KAA5B;AACA,sCAAUX,KAAKM,SAAf,EAA0BI,UAAUJ,SAApC;AACA,kCAAMN,KAAKY,QAAX,EAAqBF,UAAUE,QAA/B;AACH,SAXD;AAYH,KAbD;AAcH,CAvDD;AAwDA","file":"Game.test.js","sourcesContent":["import { deepEqual, equal, throws } from 'ptz-assert';\nimport { createGame, getCleanGameToSaveOnServer, getGameAfterMove, getGameBeforeLastMove } from './index';\ndescribe('Game', () => {\n    describe('needToValidateMovements', () => {\n        it('when null should validate');\n        it('when undefined should validate');\n        it('when true should validate');\n        it('when false should NOT validate');\n    });\n    describe('backMove', () => {\n        it('backMove offline game', () => {\n            const players = {\n                white: { name: 'Angelo', foto: 'img/black_user.png' },\n                black: { name: 'Gabi', foto: 'img/white_user.png' }\n            };\n            let game = createGame({ players });\n            const gameBeforeLastMove = getGameAfterMove(game, { from: { x: 2, y: 7 }, to: { x: 2, y: 6 } });\n            game = getGameAfterMove(gameBeforeLastMove, { from: { x: 2, y: 0 }, to: { x: 2, y: 1 } });\n            game = getGameBeforeLastMove(game);\n            equal(gameBeforeLastMove.movements.length, game.movements.length);\n            deepEqual(gameBeforeLastMove.movements, game.movements);\n        });\n    });\n    describe('Move', () => {\n        var game;\n        beforeEach(() => {\n            game = createGame({\n                players: {\n                    white: { name: 'Angelo', foto: 'img/black_user.png' },\n                    black: { name: 'Gabi', foto: 'img/white_user.png' }\n                }\n            });\n        });\n        it('Block moving to same position', () => {\n            const move = {\n                from: { x: 0, y: 0 },\n                to: { x: 0, y: 0 }\n            };\n            throws(() => {\n                game = getGameAfterMove(game, move);\n            });\n        });\n    });\n    describe('getCleanGameToSaveOnServer', () => {\n        it('map', () => {\n            const game = createGame({\n                players: {\n                    white: { name: 'Angelo', foto: 'img/black_user.png' },\n                    black: { name: 'Gabi', foto: 'img/white_user.png' }\n                }\n            });\n            const cleanGame = getCleanGameToSaveOnServer(game);\n            equal(game.ended, cleanGame.ended);\n            deepEqual(game.movements, cleanGame.movements);\n            equal(game.blackWin, cleanGame.blackWin);\n        });\n    });\n});\n//# sourceMappingURL=Game.test.js.map"]}